basePath: /
definitions:
  handlers.intervalResult:
    properties:
      count:
        type: integer
      end_time:
        type: string
      start_time:
        type: string
    type: object
  models.AuthInput:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        example: A descriptive error message
        type: string
    type: object
  models.UserActivityCreate:
    properties:
      date:
        type: string
      user_id:
        example: 12345
        type: integer
    type: object
  models.UserCreate:
    properties:
      login:
        description: Login    string `json:"login"`
        type: string
      password:
        description: |-
          Surname  string `json:"surname"`
          Phone    string `json:"phone"`
        type: string
    type: object
  models.UserRead:
    properties:
      id:
        type: integer
      username:
        type: string
    type: object
  models.UserUpdate:
    properties:
      id:
        type: integer
      login:
        type: string
      password:
        description: |-
          Surname  *string `json:"surname"`
          Phone    *string `json:"phone"`
        type: string
    type: object
  models.WorkoutCreate:
    properties:
      description:
        example: Morning workout
        type: string
      duration:
        example: 60
        type: integer
      start_time:
        example: "2023-10-01T12:00:00Z"
        type: string
      weight:
        example: 70.5
        type: number
    type: object
  models.WorkoutRead:
    properties:
      description:
        example: Morning workout
        type: string
      duration:
        example: 60
        type: integer
      start_time:
        example: "2023-10-01T12:00:00Z"
        type: string
      weight:
        example: 70.5
        type: number
    type: object
  models.WorkoutUpdate:
    properties:
      description:
        example: Morning workout
        type: string
      duration:
        example: 60
        type: integer
      id:
        type: integer
      start_time:
        example: "2023-10-01T12:00:00Z"
        type: string
      weight:
        example: 70.5
        type: number
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API for Gym Genius application
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Gym Genius API
  version: "1.0"
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: Authenticate a user with login and password, returning a token
      parameters:
      - description: Login and Password
        in: body
        name: authInput
        required: true
        schema:
          $ref: '#/definitions/models.AuthInput'
      produces:
      - application/json
      responses:
        "200":
          description: User logged in successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request body or missing fields
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Incorrect password
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to query database or create token
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User Login
      tags:
      - auth
  /statistics/active-users:
    get:
      consumes:
      - application/json
      description: Returns the count of distinct active users grouped by specified
        time intervals between start and end dates.
      parameters:
      - description: Start date/time in RFC3339 format (e.g., 2025-06-01T00:00:00Z)
        in: query
        name: start_date
        required: true
        type: string
      - description: End date/time in RFC3339 format (e.g., 2025-06-10T00:00:00Z)
        in: query
        name: end_date
        required: true
        type: string
      - description: 'Time interval step duration, format: <number><unit> where unit
          is ''h'' for hours or ''d'' for days (e.g., ''24h'', ''7d'')'
        example: '"24h"'
        in: query
        name: step
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Array of interval results containing start time, end time,
            and user count
          schema:
            items:
              $ref: '#/definitions/handlers.intervalResult'
            type: array
        "400":
          description: Invalid input parameters (missing, malformed, or invalid date
            range)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error while processing the request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get number of active users in time intervals
      tags:
      - statistics
  /statistics/add-activity:
    post:
      consumes:
      - application/json
      description: Records activity for a user on a specific date
      parameters:
      - description: Request parameters
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UserActivityCreate'
      produces:
      - application/json
      responses:
        "200":
          description: Success message
          schema:
            type: string
        "400":
          description: Validation error
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Record user activity
      tags:
      - statistics
  /users:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of users with optional page and limit
        query parameters
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of users per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserRead'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get paginated list of users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with login and password
      parameters:
      - description: User create payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by their unique ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a user by ID
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Retrieve a user by their unique ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserRead'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a user by ID
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Update user details by ID
      parameters:
      - description: User update payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an existing user
      tags:
      - users
  /workouts:
    post:
      consumes:
      - application/json
      description: Create a new workout with duration, start time, description, and
        weight
      parameters:
      - description: Workout create payload
        in: body
        name: workout
        required: true
        schema:
          $ref: '#/definitions/models.WorkoutCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new workout
      tags:
      - workouts
  /workouts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a workout by their unique ID
      parameters:
      - description: Workout ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Workout deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Workout Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a workout by ID
      tags:
      - workouts
    get:
      consumes:
      - application/json
      description: Retrieve a workout by their unique ID
      parameters:
      - description: Workout ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.WorkoutRead'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Workout Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a workout by ID
      tags:
      - workouts
    patch:
      consumes:
      - application/json
      description: Update workout details by ID
      parameters:
      - description: Workout update payload
        in: body
        name: workout
        required: true
        schema:
          $ref: '#/definitions/models.WorkoutUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Workout Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an existing workout
      tags:
      - workouts
swagger: "2.0"
