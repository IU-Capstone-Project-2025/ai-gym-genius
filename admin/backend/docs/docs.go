// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth": {
            "post": {
                "description": "Authenticate a user with login and password, returning a token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "Login and Password",
                        "name": "authInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AuthInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing fields",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Incorrect password",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to query database or create token",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/exercises": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exercises"
                ],
                "summary": "Create a new exercise",
                "parameters": [
                    {
                        "description": "Exercise create payload",
                        "name": "exercise",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ExerciseCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/exercises/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exercises"
                ],
                "summary": "Get an exercise by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exercise ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ExerciseRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exercises"
                ],
                "summary": "Delete an exercise by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exercise ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exercise deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/models.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Exercise Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exercises"
                ],
                "summary": "Update an existing exercise by ID",
                "parameters": [
                    {
                        "description": "Exercise update payload",
                        "name": "exercise",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ExerciseUpdate"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Exercise ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Exercise Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/statistics/active-users": {
            "get": {
                "description": "Returns the count of distinct active users grouped by specified time intervals between start and end dates.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Get number of active users in time intervals",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date/time in RFC3339 format (e.g., 2025-06-01T00:00:00Z)",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date/time in RFC3339 format (e.g., 2025-06-10T00:00:00Z)",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"24h\"",
                        "description": "Time interval step duration, format: \u003cnumber\u003e\u003cunit\u003e where unit is 'h' for hours or 'd' for days (e.g., '24h', '7d')",
                        "name": "step",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of interval results containing start time, end time, and user count",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.intervalResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input parameters (missing, malformed, or invalid date range)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error while processing the request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/statistics/add-activity": {
            "post": {
                "description": "Records activity for a user on a specific date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Record user activity",
                "parameters": [
                    {
                        "description": "Request parameters",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserActivityCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/models.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Retrieve a paginated list of users with optional page and limit query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get paginated list of users",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of users per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserRead"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User create payload",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/count": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get the total number of users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Retrieve a user by their unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/models.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update an existing user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update payload",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated Successfully",
                        "schema": {
                            "$ref": "#/definitions/models.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/activity": {
            "get": {
                "description": "Retrieve monthly activity statistics for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Get user activity statistics",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Monthly activity statistics",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.MonthlyStat"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/workouts": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workouts"
                ],
                "summary": "Create a new workout",
                "parameters": [
                    {
                        "description": "Workout create payload",
                        "name": "workout",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.WorkoutCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/workouts/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workouts"
                ],
                "summary": "Get a workout by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Workout ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WorkoutRead"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Workout Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workouts"
                ],
                "summary": "Delete a workout by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Workout ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workout deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/models.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Workout Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workouts"
                ],
                "summary": "Update an existing workout by ID",
                "parameters": [
                    {
                        "description": "Workout update payload",
                        "name": "workout",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.WorkoutUpdate"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Workout ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Workout Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/workouts/{id}/exercise_set": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workouts"
                ],
                "summary": "Append an exercise set to a workout",
                "parameters": [
                    {
                        "description": "ExerciseSet create payload",
                        "name": "ExerciseSet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ExerciseSetCreate"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Workout ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Exercise Set Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workouts"
                ],
                "summary": "Delete an exercise set from a workout",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Workout ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Exercise ID",
                        "name": "exercise_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Exercise Set Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.MonthlyStat": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "month": {
                    "type": "string"
                }
            }
        },
        "handlers.intervalResult": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "models.AuthInput": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.CreatedResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 12345
                },
                "message": {
                    "type": "string",
                    "example": "User created successfully"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "A descriptive error message"
                }
            }
        },
        "models.ExerciseCreate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Push-ups are a basic exercise that works the chest, shoulders, and triceps."
                },
                "muscle_groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "chest",
                        "back",
                        "triceps"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.ExerciseRead": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Push-ups are a basic exercise that works the chest, shoulders, and triceps."
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "muscle_groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "chest",
                        "back",
                        "triceps"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "description": "URL to the exercise image",
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                }
            }
        },
        "models.ExerciseSetCreate": {
            "type": "object",
            "properties": {
                "exercise_id": {
                    "type": "integer",
                    "example": 10
                },
                "reps": {
                    "type": "integer",
                    "example": 10
                },
                "weight": {
                    "type": "number",
                    "example": 10
                }
            }
        },
        "models.ExerciseSetRead": {
            "type": "object",
            "properties": {
                "exercise_id": {
                    "type": "integer",
                    "example": 10
                },
                "reps": {
                    "type": "integer",
                    "example": 10
                },
                "weight": {
                    "type": "number",
                    "example": 10
                }
            }
        },
        "models.ExerciseUpdate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Push-ups are a basic exercise that works the chest, shoulders, and triceps."
                },
                "image_path": {
                    "description": "URL to the exercise image",
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                },
                "muscle_group": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "chest",
                        "back",
                        "triceps"
                    ]
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Descriptive message"
                }
            }
        },
        "models.UserActivityCreate": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "example": 12345
                }
            }
        },
        "models.UserCreate": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john_doe@gmail.com"
                },
                "login": {
                    "type": "string",
                    "example": "john123"
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "password": {
                    "type": "string",
                    "example": "123"
                },
                "surname": {
                    "type": "string",
                    "example": "Wick"
                }
            }
        },
        "models.UserRead": {
            "type": "object",
            "properties": {
                "average_workout_duration_ns": {
                    "description": "in nanoseconds",
                    "type": "integer",
                    "example": 3600
                },
                "email": {
                    "type": "string",
                    "example": "john_doe@gmail.com"
                },
                "id": {
                    "type": "integer",
                    "example": 12345
                },
                "last_activity": {
                    "type": "string",
                    "example": "2023-10-01T12:00:00Z"
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "number_of_workouts": {
                    "type": "integer",
                    "example": 0
                },
                "status": {
                    "description": "e.g., \"active\", \"inactive\", \"banned\"",
                    "type": "string",
                    "example": "active"
                },
                "streak_count": {
                    "type": "integer",
                    "example": 0
                },
                "subscription_type": {
                    "description": "e.g., \"free\", \"basic\", \"pro\"",
                    "type": "string",
                    "example": "free"
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                },
                "total_time_spent_ns": {
                    "description": "in nanoseconds",
                    "type": "integer",
                    "example": 3600
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserUpdate": {
            "type": "object",
            "properties": {
                "average_workout_duration_ns": {
                    "description": "in seconds",
                    "type": "integer",
                    "example": 3600
                },
                "email": {
                    "type": "string",
                    "example": "john_doe@gmail.com"
                },
                "last_activity": {
                    "type": "string",
                    "example": "2023-10-01T12:00:00Z"
                },
                "login": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "number_of_workouts": {
                    "type": "integer",
                    "example": 0
                },
                "password": {
                    "type": "string"
                },
                "status": {
                    "description": "e.g., \"active\", \"inactive\", \"banned\"",
                    "type": "string",
                    "example": "active"
                },
                "streak_count": {
                    "type": "integer",
                    "example": 0
                },
                "subscription_type": {
                    "type": "string",
                    "example": "free"
                },
                "surname": {
                    "type": "string"
                },
                "total_time_spent_ns": {
                    "description": "in seconds",
                    "type": "integer",
                    "example": 3600
                }
            }
        },
        "models.WorkoutCreate": {
            "type": "object",
            "properties": {
                "duration_ns": {
                    "description": "in nanoseconds",
                    "type": "integer",
                    "example": 60
                },
                "exercise_sets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ExerciseSetCreate"
                    }
                },
                "start_time": {
                    "type": "string",
                    "example": "2023-10-01T12:00:00Z"
                },
                "user_id": {
                    "type": "integer",
                    "example": 12345
                }
            }
        },
        "models.WorkoutRead": {
            "type": "object",
            "properties": {
                "duration_ns": {
                    "description": "in nanoseconds",
                    "type": "integer",
                    "example": 60
                },
                "exercise_sets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ExerciseSetRead"
                    }
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-10-01T12:00:00Z"
                },
                "user_id": {
                    "type": "integer",
                    "example": 12345
                }
            }
        },
        "models.WorkoutUpdate": {
            "type": "object",
            "properties": {
                "duration_ns": {
                    "type": "integer",
                    "example": 60
                },
                "exercise_sets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ExerciseSetCreate"
                    }
                },
                "start_time": {
                    "type": "string",
                    "example": "2023-10-01T12:00:00Z"
                },
                "user_id": {
                    "type": "integer",
                    "example": 12345
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Gym Genius API",
	Description:      "API for Gym Genius application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
